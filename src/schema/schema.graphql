type User {
  id: ID!
  username: String!
  email: String!
  dreams: [Dream!]!
}

type Dream {
  id: ID!
  title: String!
  content: String!
  date: String!
  emotions: [String!]
  themes: [String!]
  user: User!
}

type AuthPayload {
  token: String!
  user: User!
}

type Query {
  getUser(id: ID!): User
  getDream(id: ID!): Dream
  getUserDreams(userId: ID!): [Dream!]!
}

type Mutation {
  signup(username: String!, email: String!, password: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createDream(title: String!, content: String!, date: String!, emotions: [String!], themes: [String!]): Dream!
  updateDream(id: ID!, title: String, content: String, emotions: [String!], themes: [String!]): Dream!
  deleteDream(id: ID!): Boolean!
}